[{"D:\\projects\\react\\15-new-app\\src\\index.js":"1","D:\\projects\\react\\15-new-app\\src\\App.js":"2","D:\\projects\\react\\15-new-app\\src\\pages\\NewQuote.js":"3","D:\\projects\\react\\15-new-app\\src\\pages\\QuoteDetail.js":"4","D:\\projects\\react\\15-new-app\\src\\pages\\AllQuotes.js":"5","D:\\projects\\react\\15-new-app\\src\\components\\comments\\Comments.js":"6","D:\\projects\\react\\15-new-app\\src\\components\\comments\\NewCommentForm.js":"7","D:\\projects\\react\\15-new-app\\src\\components\\layout\\Layout.js":"8","D:\\projects\\react\\15-new-app\\src\\components\\layout\\MainNavigation.js":"9","D:\\projects\\react\\15-new-app\\src\\components\\quotes\\QuoteList.js":"10","D:\\projects\\react\\15-new-app\\src\\components\\quotes\\QuoteItem.js":"11","D:\\projects\\react\\15-new-app\\src\\components\\quotes\\QuoteForm.js":"12","D:\\projects\\react\\15-new-app\\src\\components\\UI\\Card.js":"13","D:\\projects\\react\\15-new-app\\src\\components\\UI\\LoadingSpinner.js":"14","D:\\projects\\react\\15-new-app\\src\\components\\quotes\\HighlightedQuote.js":"15","D:\\projects\\react\\15-new-app\\src\\pages\\NotFound.js":"16","D:\\projects\\react\\15-new-app\\src\\hooks\\use-http.js":"17","D:\\projects\\react\\15-new-app\\src\\lib\\api.js":"18","D:\\projects\\react\\15-new-app\\src\\components\\quotes\\NoQuotesFound.js":"19","D:\\projects\\react\\15-new-app\\src\\components\\comments\\CommentsList.js":"20","D:\\projects\\react\\15-new-app\\src\\components\\comments\\CommentItem.js":"21"},{"size":259,"mtime":1663309392214,"results":"22","hashOfConfig":"23"},{"size":2281,"mtime":1663854542595,"results":"24","hashOfConfig":"23"},{"size":1417,"mtime":1663586657473,"results":"25","hashOfConfig":"23"},{"size":2956,"mtime":1663590285907,"results":"26","hashOfConfig":"23"},{"size":947,"mtime":1663754018224,"results":"27","hashOfConfig":"23"},{"size":2981,"mtime":1663855023058,"results":"28","hashOfConfig":"23"},{"size":1412,"mtime":1663855054942,"results":"29","hashOfConfig":"23"},{"size":362,"mtime":1663409896016,"results":"30","hashOfConfig":"23"},{"size":726,"mtime":1663855288235,"results":"31","hashOfConfig":"23"},{"size":2844,"mtime":1663855221012,"results":"32","hashOfConfig":"23"},{"size":461,"mtime":1663855165785,"results":"33","hashOfConfig":"23"},{"size":1945,"mtime":1663855143442,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1616596573000,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1616596573000,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1616596573000,"results":"37","hashOfConfig":"23"},{"size":155,"mtime":1663413043314,"results":"38","hashOfConfig":"23"},{"size":1896,"mtime":1663754574566,"results":"39","hashOfConfig":"23"},{"size":2177,"mtime":1663580653439,"results":"40","hashOfConfig":"23"},{"size":351,"mtime":1663855119937,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1616596573000,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1616596573000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"csgqqw",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\projects\\react\\15-new-app\\src\\index.js",[],["92","93"],"D:\\projects\\react\\15-new-app\\src\\App.js",[],"D:\\projects\\react\\15-new-app\\src\\pages\\NewQuote.js",[],"D:\\projects\\react\\15-new-app\\src\\pages\\QuoteDetail.js",[],"D:\\projects\\react\\15-new-app\\src\\pages\\AllQuotes.js",["94"],"import { useEffect, useState } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","D:\\projects\\react\\15-new-app\\src\\components\\comments\\Comments.js",["95"],"import { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    data: loadedComments,\n    status,\n    error,\n  } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  //Эту функцию через пропс мы передаем дальше в компонент NewCommentForm. Нужно обернуть его в usecallback, чтобы не получился бесконечный цикл пересозданий. В компоненте NewCommentForm эта функция указана как зависимость useEffect. Поскольку при рендере функции как бы создаются заново, эта функция перезаписывалась бы, useeffect бы считывал изменение функции и снова перезаписывал\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  //Здесь динамически рендерим секцию комментов, исходя из статуса азпроса http\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (loadedComments || loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">Еще нет комментариев :(</p>;\n  }\n\n  //OnAddedComment - должна срабатывать при отправке комментария внутри компонента NewCommentForm\n  //А quoteId передается там же внутрь запроса отправки коммента на сервак, чтобы к этому id привязать коммент\n  return (\n    <section className={classes.comments}>\n      <h2>Комментарии:</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Добавить\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","D:\\projects\\react\\15-new-app\\src\\components\\comments\\NewCommentForm.js",["96"],"import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, data, error, status } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Ваш комментарий</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Добавить</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","D:\\projects\\react\\15-new-app\\src\\components\\layout\\Layout.js",["97"],"import { props } from \"bluebird\";\r\nimport { Fragment } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","D:\\projects\\react\\15-new-app\\src\\components\\layout\\MainNavigation.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\quotes\\QuoteList.js",["98"],"import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  //Здесь используем хук useHistory, чтобы изменить URL страницы. Мы добавляем querie параметры, чтобы остаться на этой же странице, но отсортировать данные. Получается, что мы нажимаем кнопку сортировки, потом в историю пушится URL, а поскольку мы уже на этом URL, компонент просто перерендерится.\n  //Хук useLocation возвращает объект Location react routerа, который отображает информацию о текущем загруженном URL\n\n  //Создаем класс URLSearchParams web API через конструктор, чтобы получить возможность пользоваться методами URLSearchParams. И передаем в него данные параметров поиска из location.search\n  const queryParams = new URLSearchParams(location.search);\n\n  //Проверяем, совпадает ли значение в URL с нужным нам\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    //C useHistory можно использовать объекты для работы методов. Вместо создания одной длинной строки, можно передать как объект по частям\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? \"desc\" : \"asc\")}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Сорт. {isSortingAscending ? \"по убыванию\" : \"по возрастанию\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","D:\\projects\\react\\15-new-app\\src\\components\\quotes\\QuoteItem.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\quotes\\QuoteForm.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\UI\\Card.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\projects\\react\\15-new-app\\src\\pages\\NotFound.js",[],"D:\\projects\\react\\15-new-app\\src\\hooks\\use-http.js",[],"D:\\projects\\react\\15-new-app\\src\\lib\\api.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\comments\\CommentsList.js",[],"D:\\projects\\react\\15-new-app\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":21,"nodeType":"105","messageId":"106","endLine":1,"endColumn":29},{"ruleId":"103","severity":1,"message":"107","line":20,"column":5,"nodeType":"105","messageId":"106","endLine":20,"endColumn":10},{"ruleId":"103","severity":1,"message":"108","line":10,"column":24,"nodeType":"105","messageId":"106","endLine":10,"endColumn":28},{"ruleId":"103","severity":1,"message":"109","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":15},{"ruleId":"103","severity":1,"message":"110","line":30,"column":9,"nodeType":"105","messageId":"106","endLine":30,"endColumn":21},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'props' is defined but never used.","'sortedQuotes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]